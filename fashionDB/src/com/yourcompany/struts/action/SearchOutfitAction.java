/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.yourcompany.struts.action;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import ui.OutfitUIAdaptor;

import com.yourcompany.struts.form.SearchOutfitForm;

import dao.ProductSearchDAO;
import entity.Outfit;

/**
 * MyEclipse Struts Creation date: 06-20-2013
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/searchOutfit" name="searchOutfitForm"
 *                input="/productSearch.jsp" scope="request" validate="true"
 * @struts.action-forward name="outfitResult" path="/productSearch.jsp"
 */
public class SearchOutfitAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		request.getSession().removeAttribute("outfitResult");
		SearchOutfitForm searchOutfitForm = (SearchOutfitForm) form;
		final Long apparelId;
		if (searchOutfitForm.getProductId()==null) {
			apparelId = null;
		} else {
			apparelId = Long.valueOf(searchOutfitForm.getProductId());
		}
		final ProductSearchDAO dao = new ProductSearchDAO();
		final List<Outfit> outfits = dao.getOutfits(apparelId);
		dao.closeConnection();
		if (outfits.isEmpty()) {
			final ActionErrors msg = new ActionErrors();
			msg.add("searchOutfitResult", new ActionError("noDataToDisplay"));
			saveErrors(request, msg);
		} else {
			final List<OutfitUIAdaptor> result = new ArrayList<OutfitUIAdaptor>();
			for (final Outfit outfit : outfits) {
				result.add(new OutfitUIAdaptor(outfit));
			}
			request.getSession().setAttribute("outfitResult", result);
		}
		return mapping.findForward("outfitResult");
	}
}