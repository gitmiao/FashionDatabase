/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.yourcompany.struts.form;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;

import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionMapping;

import ui.ApparelSearchParameters;

/**
 * MyEclipse Struts Creation date: 06-16-2013
 * 
 * XDoclet definition:
 * 
 * @struts.form name="searchProductForm"
 */
public class SearchProductForm extends ActionForm {
	/*
	 * Generated fields
	 */

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/** season property */
	private String season;

	/** brand property */
	private String brand;

	/** retailFrom property */
	private String retailFrom;

	/** type property */
	private String type;

	/** retailTo property */
	private String retailTo;

	private String pressId;

	private String publishDate;

	private String minRate;

	private ApparelSearchParameters apparelSearchParams;

	/*
	 * Generated Methods
	 */

	/**
	 * Method validate
	 * 
	 * @param mapping
	 * @param request
	 * @return ActionErrors
	 */
	public ActionErrors validate(ActionMapping mapping,
			HttpServletRequest request) {
		final ActionErrors errors = new ActionErrors();
		// note that is user doesn't provide retail from/to, an empty string
		// will be passed in
		final Double retailPriceFrom;
		final Double retailPriceTo;

		if (retailFrom.isEmpty()) {
			retailPriceFrom = null;
		} else {
			try {
				retailPriceFrom = Double.valueOf(retailFrom);
				if (retailPriceFrom < 0) {
					errors.add("retailFrom", new ActionError(
							"errors.invalidRetailFrom"));
					return errors;
				}
			} catch (NumberFormatException e) {
				errors.add("retailFrom", new ActionError(
						"errors.invalidRetailFrom"));
				return errors;
			}
		}

		if (retailTo.isEmpty()) {
			retailPriceTo = null;
		} else {
			try {
				retailPriceTo = Double.valueOf(retailTo);
				if (retailPriceTo < 0) {
					errors.add("retailTo", new ActionError(
							"errors.invalidRetailTo"));
					return errors;
				}
				if (retailPriceFrom != null && retailPriceTo < retailPriceFrom) {
					errors.add("retailTo", new ActionError(
							"errors.errors.invalidRetailFromTo"));
					return errors;
				}
			} catch (NumberFormatException e) {
				errors.add("retailTo",
						new ActionError("errors.invalidRetailTo"));
				return errors;
			}
		}

		final Double minRateValue;
		if (minRate.isEmpty()) {
			minRateValue = null;
		} else {
			try {
				minRateValue = Double.valueOf(minRate);
				if (minRateValue < 0) {
					errors.add("minRate", new ActionError(
							"errors.invalidMinRate"));
					return errors;
				}
			} catch (NumberFormatException e) {
				errors.add("minRate", new ActionError("errors.invalidMinRate"));
				return errors;
			}
		}
		Date publishD = null;
		try {
			if (publishDate != null && !publishDate.isEmpty()) {
				publishD = new SimpleDateFormat("dd-MMM-yyyy")
						.parse(publishDate);
			}
		} catch (ParseException e) {
			e.printStackTrace();
		}
		apparelSearchParams = new ApparelSearchParameters(type,
				"ALL".equals(brand) ? null : brand, "ALL".equals(season) ? null
						: season, retailPriceFrom, retailPriceTo,
				"".equals(pressId) ? null : Long.valueOf(pressId), publishD,
				minRateValue);
		return errors;
	}

	/**
	 * Method reset
	 * 
	 * @param mapping
	 * @param request
	 */
	public void reset(ActionMapping mapping, HttpServletRequest request) {
	}

	/**
	 * Returns the season.
	 * 
	 * @return String
	 */
	public String getSeason() {
		return season;
	}

	/**
	 * Set the season.
	 * 
	 * @param season
	 *            The season to set
	 */
	public void setSeason(String season) {
		this.season = season;
	}

	/**
	 * Returns the brand.
	 * 
	 * @return String
	 */
	public String getBrand() {
		return brand;
	}

	/**
	 * Set the brand.
	 * 
	 * @param brand
	 *            The brand to set
	 */
	public void setBrand(String brand) {
		this.brand = brand;
	}

	/**
	 * Returns the retailFrom.
	 * 
	 * @return String
	 */
	public String getRetailFrom() {
		return retailFrom;
	}

	/**
	 * Set the retailFrom.
	 * 
	 * @param retailFrom
	 *            The retailFrom to set
	 */
	public void setRetailFrom(final String retailFrom) {
		this.retailFrom = retailFrom;
	}

	/**
	 * Returns the type.
	 * 
	 * @return String
	 */
	public String getType() {
		return type;
	}

	/**
	 * Set the type.
	 * 
	 * @param type
	 *            The type to set
	 */
	public void setType(String type) {
		this.type = type;
	}

	/**
	 * Returns the retailTo.
	 * 
	 * @return String
	 */
	public String getRetailTo() {
		return retailTo;
	}

	/**
	 * Set the retailTo.
	 * 
	 * @param retailTo
	 *            The retailTo to set
	 */
	public void setRetailTo(final String retailTo) {
		this.retailTo = retailTo;
	}

	public String getPressId() {
		return pressId;
	}

	public void setPressId(String pressId) {
		this.pressId = pressId;
	}

	public String getPublishDate() {
		return publishDate;
	}

	public void setPublishDate(String publishDate) {
		this.publishDate = publishDate;
	}

	public String getMinRate() {
		return minRate;
	}

	public void setMinRate(String minRate) {
		this.minRate = minRate;
	}

	public ApparelSearchParameters getApparelSearchParams() {
		return apparelSearchParams;
	}
}